AWSTemplateFormatVersion: "2010-09-09"

Description: Global accelerator to TCP proxy in any region

Parameters:
  CIDR:
    Description: Subnet IP range
    Type: String
    Default: 10.0.0.0/28
  ClientIP:
    Description: Client IP
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
  ProxyPort:
    Description: Proxy port
    Type: Number
  ProxyStatsPassword:
    Description: Password to log in proxy stats
    Type: String
  ProxyStatsPort:
    Description: Proxy Stats port
    Type: Number
    Default: 8404
  ProxyStatsUsername:
    Description: Username to log in proxy stats
    Type: String
    Default: admin
  ServerDomain:
    Description: Server domain
    Type: String
  ServerPort:
    Description: Server port
    Type: Number

Mappings:
  AMI:
    ap-northeast-1:
      Ubuntu2004LTS: ami-02a56e430b32bc0ba
    ap-northeast-2:
      Ubuntu2004LTS: ami-0cceb8e71553d73f0
    ap-northeast-3:
      Ubuntu2004LTS: ami-0c2a318a1451b5e04
    ap-south-1:
      Ubuntu2004LTS: ami-01ad2fc4607cc742e
    ap-southeast-1:
      Ubuntu2004LTS: ami-072466d111bc68d81
    ap-southeast-2:
      Ubuntu2004LTS: ami-0606a3915440b2b72
    ca-central-1:
      Ubuntu2004LTS: ami-07e39d7bd85085b96
    eu-central-1:
      Ubuntu2004LTS: ami-0afc0414aefc9eaa7
    eu-north-1:
      Ubuntu2004LTS: ami-0aacae1c06b3c30a0
    eu-west-1:
      Ubuntu2004LTS: ami-0c1aea1d6f3bdd76b
    eu-west-2:
      Ubuntu2004LTS: ami-00f314baca4922fe3
    eu-west-3:
      Ubuntu2004LTS: ami-021a18be6333356c7
    sa-east-1:
      Ubuntu2004LTS: ami-0a62c6929da4659cb
    us-east-1:
      Ubuntu2004LTS: ami-089b5711e63812c2a
    us-east-2:
      Ubuntu2004LTS: ami-0ac4906b9504bec77
    us-west-1:
      Ubuntu2004LTS: ami-04b8a53b12fd66ba7
    us-west-2:
      Ubuntu2004LTS: ami-0f6970790b38613ef

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CIDR
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-PublicSubnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-PublicNetworkAcl
  InboundClientStatsNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: 6
      Egress: false
      RuleAction: allow
      PortRange:
        From: !Ref ProxyStatsPort
        To: !Ref ProxyStatsPort
      CidrBlock: !Sub ${ClientIP}/32
  InboundClientProxyNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 110
      Protocol: 6
      Egress: false
      RuleAction: allow
      PortRange:
        From: !Ref ProxyPort
        To: !Ref ProxyPort
      CidrBlock: 0.0.0.0/0
  InboundEphemeralPortsNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 200
      Protocol: 6
      Egress: false
      RuleAction: allow
      PortRange:
        From: 1024
        To: 65535
      CidrBlock: 0.0.0.0/0
  OutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      PortRange:
        From: 0
        To: 65535
      CidrBlock: 0.0.0.0/0
  PublicSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      NetworkAclId: !Ref PublicNetworkAcl
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${AWS::StackName}-InstanceProfile
      Roles:
        - !Ref InstanceRole
  Route53HealthCheckersSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-Route53HealthCheckersSecurityGroup
      GroupDescription: Route53 health checker IPs
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: GLOBAL
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 15.177.0.0/18
        - Description: cn-north-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 52.80.197.0/25
        - Description: cn-north-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 52.80.197.128/25
        - Description: cn-north-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 52.80.198.0/25
        - Description: cn-northwest-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 52.83.34.128/25
        - Description: cn-northwest-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 52.83.35.0/25
        - Description: cn-northwest-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 52.83.35.128/25
        - Description: ap-northeast-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.248.220.0/26
        - Description: ap-northeast-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.250.253.192/26
        - Description: ap-southeast-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.251.31.128/26
        - Description: ap-southeast-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.255.254.192/26
        - Description: ap-southeast-2
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.252.254.192/26
        - Description: ap-southeast-2
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.252.79.128/26
        - Description: eu-west-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 176.34.159.192/26
        - Description: eu-west-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.228.16.0/26
        - Description: sa-east-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 177.71.207.128/26
        - Description: sa-east-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.232.40.64/26
        - Description: us-east-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 107.23.255.0/26
        - Description: us-east-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.243.31.192/26
        - Description: us-west-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.183.255.128/26
        - Description: us-west-1
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.241.32.64/26
        - Description: us-west-2
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.244.52.192/26
        - Description: us-west-2
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: 54.245.168.0/26
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-Route53HealthCheckersSecurityGroup
  ClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-ClientSecurityGroup
      GroupDescription: Client IP
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: Proxy
          IpProtocol: tcp
          FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
          CidrIp: !Sub ${ClientIP}/32
        - Description: Stats
          IpProtocol: tcp
          FromPort: !Ref ProxyStatsPort
          ToPort: !Ref ProxyStatsPort
          CidrIp: !Sub ${ClientIP}/32
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ AMI, !Ref AWS::Region, Ubuntu2004LTS ]
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !GetAtt ClientSecurityGroup.GroupId
        - !GetAtt Route53HealthCheckersSecurityGroup.GroupId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          apt-get --yes update
          apt-get --yes upgrade
          wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          mkdir -p /opt/aws/bin
          python3 -m easy_install --script-dir /opt/aws/bin aws-cfn-bootstrap-py3-latest.tar.gz
          /opt/aws/bin/cfn-init --verbose --region ${AWS::Region} --stack ${AWS::StackName} --resource Instance
          /opt/aws/bin/cfn-signal --exit-code $? --region ${AWS::Region} --stack ${AWS::StackName} --resource Instance
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-Instance
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT15M
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            01_enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02_start_cfn_hup:
              command: systemctl start cfn-hup.service
            03_install_haproxy:
              command: apt-get --yes --force-yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install haproxy
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
            /lib/systemd/system/cfn-hup.service:
              content: !Sub |
                [Unit]
                Description=cfn-hup daemon
                [Service]
                Type=simple
                ExecStart=/opt/aws/bin/cfn-hup
                Restart=always
                [Install]
                WantedBy=multi-user.target
            /etc/haproxy/haproxy.cfg:
              content: !Sub |
                global
                  log stdout format raw local0 info
                defaults
                  mode tcp
                  timeout client 10s
                  timeout connect 5s
                  timeout server 10s
                  log global
                frontend stats
                  mode http
                  bind *:${ProxyStatsPort}
                  stats auth ${ProxyStatsUsername}:${ProxyStatsPassword}
                  stats enable
                  stats uri /
                  stats refresh 10s
                frontend my_frontend
                  bind :${ProxyPort}
                  default_backend my_backend
                backend my_backend
                  server my_server ${ServerDomain}:${ServerPort} check
  GlobalAccelerator:
    Type: AWS::GlobalAccelerator::Accelerator
    Properties:
      Name: !Sub ${AWS::StackName}-GlobalAccelerator
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub ${AWS::StackName}-GlobalAccelerator
  GlobalAcceleratorListener:
    Type: AWS::GlobalAccelerator::Listener
    Properties:
      AcceleratorArn: !Ref GlobalAccelerator
      Protocol: TCP
      PortRanges:
        - FromPort: !Ref ProxyPort
          ToPort: !Ref ProxyPort
        - FromPort: !Ref ProxyStatsPort
          ToPort: !Ref ProxyStatsPort
  GlobalAcceleratorEndpoint:
    Type: AWS::GlobalAccelerator::EndpointGroup
    Properties:
      ListenerArn: !Ref GlobalAcceleratorListener
      EndpointGroupRegion: !Ref AWS::Region
      EndpointConfigurations:
        - EndpointId: !Ref Instance
      HealthCheckProtocol: TCP
      HealthCheckPort: !Ref ProxyPort

Outputs:
  Proxy:
    Description: Domain:Port to proxy
    Value: !Sub ${GlobalAccelerator.DnsName}:${ProxyPort}
  ProxyStats:
    Description: Domain:Port to proxy stats
    Value: !Sub ${GlobalAccelerator.DnsName}:${ProxyStatsPort}
  ProxyStatsUsername:
    Description: Username to log in proxy stats
    Value: !Ref ProxyStatsUsername
  ProxyStatsPassword:
    Description: Password to log in proxy stats
    Value: !Ref ProxyStatsPassword
  ProxyInstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref Instance
